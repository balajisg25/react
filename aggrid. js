import React, { useEffect, useState } from 'react';
import { AgGridReact } from 'ag-grid-react';
import 'ag-grid-community/styles/ag-grid.css';
import 'ag-grid-community/styles/ag-theme-alpine.css';
import axios from 'axios';
import { FaEye, FaEyeSlash } from 'react-icons/fa';

const DynamicTable = () => {
  const [rowData, setRowData] = useState([]);
  const [columnDefs, setColumnDefs] = useState([]);
  const [gridApi, setGridApi] = useState(null);
  const [columnsVisibility, setColumnsVisibility] = useState({});

  useEffect(() => {
    axios.get('https://jsonplaceholder.typicode.com/users')
      .then(response => {
        const fetchedData = response.data;
        setRowData(fetchedData);

        const columns = Object.keys(fetchedData[0] || {}).map((key, index) => ({
          headerName: key || `Column ${index}`,
          field: key || `column_${index}`, // Field must be unique
        }));

        setColumnDefs(columns);
        // Initialize column visibility state
        const initialVisibility = columns.reduce((acc, col) => {
          acc[col.field] = true; // Show all columns by default
          return acc;
        }, {});
        setColumnsVisibility(initialVisibility);
      });
  }, []);

  const onGridReady = (params) => {
    setGridApi(params.api);
  };

  const toggleColumnVisibility = (field) => {
    if (!gridApi) return;

    const newVisibility = !columnsVisibility[field];
    gridApi.getColumnState().forEach((colState) => {
      if (colState.colId === field) {
        colState.hide = !newVisibility;
      }
    });

    gridApi.setColumnState(gridApi.getColumnState()); // Apply changes
    setColumnsVisibility(prevState => ({
      ...prevState,
      [field]: newVisibility,
    }));
  };

  return (
    <div>
      <div style={{ marginBottom: '10px' }}>
        {columnDefs.map(col => (
          <button
            key={col.field}
            onClick={() => toggleColumnVisibility(col.field)}
            style={{ marginRight: '10px' }}
          >
            {columnsVisibility[col.field] ? <FaEye size={20} /> : <FaEyeSlash size={20} />}
            {col.headerName}
          </button>
        ))}
      </div>
      <div className="ag-theme-alpine" style={{ height: '400px', width: '100%' }}>
        <AgGridReact
          rowData={rowData}
          columnDefs={columnDefs}
          onGridReady={onGridReady}
        />
      </div>
    </div>
  );
};

export default DynamicTable;